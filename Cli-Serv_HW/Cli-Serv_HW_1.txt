1) Что такое клиент-серверная архитектура
	- это вычислительная или сетевая архитектура, в которой задания или сетевая нагрузка распределены между поставщиками услуг, называемыми серверами, и заказчиками услуг, называемыми клиентами.
2) Что такое HTTP и HTTPS
	- HTTP (HyperText Transfer Protocol)- это протокол прикладного уровня передачи данных использующийся для передачи произвольных данных.
	- HTTPS (HyperText Transfer Protocol Secure) - это расширение протокола HTTP для поддержки шифрования в целях повышения безопасности.
3) HTTP методы
	- это последовательность из любых символов, кроме управляющих и разделителей, указывающая на основную операцию над ресурсом, записанная английскими словами (всего: 39 глаголов) и чувствительная к регистру:
		1) GET - используется для получения информации с сервера с использованием заданного URI и не должны иметь никакого другого воздействия на данные;
		2) HEAD - то же, что и GET, но передает только строку состояния и заголовок;
		3) POST - используется для отправки данных на сервер, например, информации о клиенте, загрузки файла и т.д. с использованием HTML-форм;
		4) PUT - заменяет все текущие представления целевого ресурса загруженным контентом;
		5) DELETE - удаляет все текущие представления целевого ресурса, заданного URI;
		6) CONNECT - устанавливает туннель (соединение) к серверу, идентифицированному данным URI;
		7) OPTIONS - описывает варианты связи для целевого ресурса;
		8) PATCH - предназначен для частичной модификации целевого ресурса;
		9) TRACE - выполняет циклическую проверку сообщения по пути к целевому ресурсу.
4) HTTP статус коды сервера
	- код ответа (состояния) HTTP показывает, был ли успешно выполнен определённый HTTP запрос. Всего выделяют пять классов:
		1) Информационные (100-199) - в этот класс выделены коды, информирующие о процессе передачи;
		2) Успешные (200-299) - сообщения данного класса информируют о случаях успешного принятия и обработки запроса клиента;
		3) Перенаправление (300-399) - коды этого класса сообщают клиенту, что для успешного выполнения операции необходимо сделать другой запрос, как правило, по другому URI;
		4) Клиентские (400-499) - этот класс кодов предназначен для указания ошибок со стороны клиента;
		5) Серверные (500-599) - этот класс кодов выделен под случаи необработанных исключений при выполнении операций на стороне сервера.
5) Что такое ядро браузера
	- это совокупность двух программ преобразующих содержимое веб-страницы и информации о форматировании в интерактивное представление на пользовательских устройствах:
		1) Rendering Engine - отвечает за преобразование содержимого веб-страниц (файлы HTML, XML, цифровые изображения и т.д.);
		2) JavaScript Engine - отвечает за преобразование информации о форматировании (в форматах CSS, XSL и т.д.).
6) Какие браузеры какиие ядра используют
	- ниже приведена информация в формате "Bowser name - Rendering Engine/JavaScript Engine":
		1) Chrome - Blink/V8;
		2) Internet Explorer - Trident/Chakra;
		3) Firefox - Gecko/SpiderMonkey;
		4) Edge - EgdeHTML/Chakra;
		5) Opera - Blink/V8;
		6) Safari - WebKit/Nitro.
7) Что такое API
	- это тип программного интерфейса, предлагающий услуги другим программам, являясь соединением между компьютерами или между компьютерными программами.
8) Что такое Endpoint
	- это интерфейс, предоставляемый взаимодействующей стороной или каналом связи.
9) URL (URI, URL, URN)
	- URI (Uniform Resource Identifier)  - унифицированный (единообразный) идентификатор ресурса и состоит из:
		1) Protocol/Scheme - набор правил и действий (очерёдности действий), позволяющий осуществлять соединение и обмен данными между двумя и более включёнными в сеть устройствами;
		2) Host - любое устройство, предоставляющее сервисы формата "клиент-сервер" в режиме сервера по каким-либо интерфейсам и уникально определённое на этих интерфейсах;
		3) Port - это эндпоинт, который на программном уровне в операционной системе представляет собой логическую конструкцию, идентифицирующую конкретный процесс или тип сетевой службы;
		4) Path - это строка символов, используемая для уникальной идентификации местоположения в структуре каталогов;
		5) (URI/Query) Parameter - это переменная особого типа, используемая для получения уникального типа ресурса (URI Parameter), либо для фильтрации и разбиения на страницы (Query Parameter);
		6) Fragment - это строка символов, указывающая на ресурс, подчиненный первичному ресурсу (внутренняя ссылка).
	- URN (Uniform Resource Name) - унифицированное (единообразное) название (имя) ресурса и состоит из:
		1) Host - любое устройство, предоставляющее сервисы формата "клиент-сервер" в режиме сервера по каким-либо интерфейсам и уникально определённое на этих интерфейсах;
		2) Port - это эндпоинт, который на программном уровне в операционной системе представляет собой логическую конструкцию, идентифицирующую конкретный процесс или тип сетевой службы;
		3) Path - это строка символов, используемая для уникальной идентификации местоположения в структуре каталогов;
		4) (URI/Query) Parameter - это переменная особого типа, используемая для получения уникального типа ресурса (URI Parameter), либо для фильтрации и разбиения на страницы (Query Parameter);
		5) Fragment - это строка символов, указывающая на ресурс, подчиненный первичному ресурсу (внутренняя ссылка).
	- URL (Uniform Resource Locator) - унифицированный (единообразный) указатель ресурса, также называемый веб-адресом, и состоит из:
		1) Protocol/Scheme - набор правил и действий (очерёдности действий), позволяющий осуществлять соединение и обмен данными между двумя и более включёнными в сеть устройствами;
		2) Host - любое устройство, предоставляющее сервисы формата "клиент-сервер" в режиме сервера по каким-либо интерфейсам и уникально определённое на этих интерфейсах;
		3) Port - это эндпоинт, который на программном уровне в операционной системе представляет собой логическую конструкцию, идентифицирующую конкретный процесс или тип сетевой службы;
		4) Path - это строка символов, используемая для уникальной идентификации местоположения в структуре каталогов.
10) Идемпотентные HTTP методы
	- метод запроса считается "идемпотентным", если предполагаемый эффект на сервере нескольких идентичных запросов с помощью этого метода такой же, как эффект для одного такого запроса. 
	- не все методы являются идемпотентными:
		1) CONNECT;
		2) LOCK;
		3) PATCH;
		4) POST.
11) Безопасные HTTP методы
	- это методы не изменяющие состояние сервера (read-only).
	- все безопасные методы являются идемпотентыми:
		1) GET;
		2) HEAD;
		3) OPTIONS;
		4) PRI;
		5) PROPFIND;
		6) PROPPATCH;
		7) REPORT;
		8) SEARCH;
		9) TRACE.		
12) Иденфикация, Аутентификация, Авторизация
	- Все три процесса связаны (и не могут быть выполнены без предварительной регистрации):
		1) Иденфикация - это установление идентичности субъекта идентификации в информационной системе путём выявления уникального идентификатора;
		2) Аутентификация - это проверка легальности субъекта путём сравнения на подлинность введённых данных и уже известных информационной системе;
		3) Авторизация - это процесс предоставления и последующей проверки прав на совершение опредлённых действий в информационной системе.
13) Что такое IP
	- это протокол связи сетевого уровня в наборе интернет-протоколов для ретрансляции дейтаграмм через границы сети. Его функция маршрутизации обеспечивает межсетевое взаимодействие и, по сути, устанавливает Интернет.
14) Что такое октеты в DNS
	- начать стоит с того, что октет - это постоянная величина в 8 бит (двоичных разрядов) хранимой и/или обрабатываемой информации.
	- октет в DNS - это неотъемлемая часть хранимой и получаемой информации о доменах в битах.
15) Что такое порт, сколько портов у Linux сервера
	- Порт - это эндпоинт, который на программном уровне в операционной системе представляет собой логическую конструкцию, идентифицирующую конкретный процесс или тип сетевой службы.
	- Количество открытых портов не регламентируется и регулируется соответственно потребностям. 
		Как пример, согласно "Red Hat Enterprise Linux 4: Руководство по безопасности" используемые в Red Hat Enterprise Linux в качестве стандартных портов взаимодействия различных служб, включая FTP, SSH и Samba:
			1) Хорошо известных и определеных IANA - 112 портов;
			2) Специфические порты UNIX - 24 порта;
			3) Зарегистрированные порты - 79 портов;
			4) Порты протокола доставки датаграмм - 4 порта;
			5) Порты Kerberos (проекта Athena/MIT) - 7 портов;
			6) Незарегистрированные порты - 46 портов.
		Итого используется: 272 порта.
16) Уровни OSI
	- Сетевая модель OSI имеет семь уровней, иерархически расположенных от большего к меньшему:
		7) Application layer (Прикладной уровень);
		6) Presentation layer (Уровень представления);
		5) Session layer (Сеансовый уровень);
		4) Transport layer (Транспортный уровень);
		3) Network layer (Сетевой уровень);
		2) Data link layer (Канальный уровень);
		1) Physical layer (Физический уровень).
17) Хедеры HTTP запросов
	- используются для передачи дополнительной информации между клиентом и сервером через заголовок запроса и ответа, нечувствительны к регистру, поля заголовков разделены двоеточием, пары ключ-значение представлены в формате текстовой строки, есть несколько полей заголовка, которые могут содержать комментарии и все они разделены на четыре вида в зависимости от контекста:
		1) General Headers (Основные заголовоки) - этот тип заголовков применяется к заголовкам запроса и ответа, но не влияет на тело базы данных;
		2) Request Headers (Заголовоки запроса) - этот тип заголовков содержит информацию о запросе, полученном клиентом;
		3) Response Headers (Заголовоки ответа) - этот тип заголовков содержит местоположение источника, запрошенного клиентом;
		4) Entity Headers (Заголовоки сущности) - этот тип заголовков содержит информацию о теле ресурсов.